#!/usr/bin/env python

"""Convert a CMA file to another alignment format.

Usage:
    cma-convert -o to_format [cma-file] > out-alignment-file
    cma-convert -i from_format [alignment-file] > out-cma-file
"""

import sys
import argparse
from Bio import AlignIO, SeqIO
from biocma import biocma

AP = argparse.ArgumentParser()
AP.add_argument('-o', '--outformat')
AP.add_argument('-i', '--informat')
AP.add_argument('infile', nargs='?',
                type=argparse.FileType('r'), default=sys.stdin)
args = AP.parse_args()
if sum(map(bool, (args.outformat, args.informat))) != 1:
    sys.exit(__doc__)

all_outformats = set(AlignIO._FormatToWriter.keys()
                     + SeqIO._FormatToWriter.keys())
all_informats = set(AlignIO._FormatToIterator.keys()
                    + SeqIO._FormatToIterator.keys())

if args.outformat:
    if args.outformat not in all_outformats:
        print >>sys.stderr, "Invalid output format '%s'" % args.outformat
        sys.exit("Supported output formats:\n\t"
                 + '\n\t'.join(sorted(all_outformats)))

    records = biocma.parse(args.infile)
    count = AlignIO.write(records, sys.stdout, args.outformat)
else:
    if args.informat not in all_informats:
        print >>sys.stderr, "Invalid input format '%s'" % args.informat
        sys.exit("Supported input formats:\n\t"
                 + '\n\t'.join(sorted(all_informats)))

    records = AlignIO.parse(args.infile, args.informat)
    biocma.write(records, sys.stdout)

